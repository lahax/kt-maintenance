package test.pages;

import org.openqa.selenium.WebElement;
import ta.annotations.elements.Element;
import ta.common.CommonPage;
import ta.entities.elements.PageElement;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class AlarmsPage {


    @Element(xpath = "//h2[contains(text(), 'Alarms')]", desc = "Alarms lending page title ")
    private static PageElement alarmsLandingPageTitle;

    /*----------------------------------------- Table Header --------------------------------------------*/
    @Element(xpath = "//th//div[contains(@class, 'ng-star-inserted') and contains(., 'Timestamp')]", desc = "Timestamp column header")
    private static PageElement timestampColumnHeader;
    @Element(xpath = "//th//div[contains(@class, 'ng-star-inserted') and contains(., 'Project')]", desc = "Project column header")
    private static PageElement projectColumnHeader;
    @Element(xpath = "//th//div[contains(@class, 'ng-star-inserted') and contains(., 'Source')]", desc = "Source column header")
    private static PageElement sourceColumnHeader;
    @Element(xpath = "//th//div[contains(@class, 'ng-star-inserted') and contains(., 'Type')]", desc = "Type column header")
    private static PageElement typeColumnHeader;
    @Element(xpath = "//th//div[contains(@class, 'ng-star-inserted') and contains(., 'Message')]", desc = "Message column header")
    private static PageElement messageColumnHeader;
    @Element(xpath = "//th//div[contains(@class, 'ng-star-inserted') and contains(., 'Status')]", desc = "Status column header")
    private static PageElement statusColumnHeader;
    @Element(xpath = "//th[@class='--align-center ng-star-inserted']", desc = "Actions column header")
    private static PageElement actionColumnHeader;
    /*----------------------------------------- Tooltip --------------------------------------------*/
    @Element(xpath = "//th/..//div[contains(@class, 'ng-star-inserted')]/div[contains(., 'Type')]/i", desc = "Type Tooltip Icon")
    private static PageElement typeTooltipIcon;
    @Element(xpath = "//dmc-alarms-type/h4[contains(., 'Type')]", desc = "Type Tooltip Pop-up Title")
    private static PageElement typeTooltipTitle;
    @Element(xpath = "//dmc-alarms-type/ul/li[contains(.,'events related to the things, in particular to connectivity events')]/strong[contains(., 'Thing event')]", desc = "Type Tooltip Pop-up Text Thing event")
    private static PageElement typeTooltipTextThing;
    @Element(xpath = "//dmc-alarms-type/ul/li[contains(.,'alarms generated by devices') and contains(.,'gateway, things or direct thing') and contains(.,'the alarms can be set in the E2E monitoring section')]/strong[contains(., 'Device alarm')]", desc = "Type Tooltip Pop-up Text Device alarm")
    private static PageElement typeTooltipTextDevice;
    @Element(xpath = "//dmc-alarms-type/ul/li[contains(.,'alarms generated with this specific') and contains(.,'notification_type')]/strong[contains(., 'Aggregate alarm')]", desc = "Type Tooltip Pop-up Text Aggregated alarm")
    private static PageElement typeTooltipTextAggregated;
    @Element(xpath = "//th/..//div[contains(@class, 'ng-star-inserted')]/div[contains(., 'Message')]/i", desc = "Message Tooltip Icon")
    private static PageElement messageTooltipIcon;
    @Element(xpath = "//dmc-alarms-message/h4[contains(., 'Message')]", desc = "Message Tooltip Pop-up Title")
    private static PageElement messageTooltipTitle;
    @Element(xpath = "//dmc-alarms-message/ul/li[contains(.,'the device has been connected or disconnected')]/strong[contains(., 'Lifecycle')]", desc = "Message Tooltip Pop-up Text Lifecycle")
    private static PageElement messageTooltipTextLifecycle;
    @Element(xpath = "//dmc-alarms-message/ul/li[contains(.,' alert if a devices is disconnected for more than an amount of time')]/strong[contains(., 'Business_alarm')]", desc = "Message Tooltip Pop-up Text Business Alarm")
    private static PageElement messageTooltipTextBusiness;
    @Element(xpath = "//dmc-alarms-message/ul/li[contains(.,'to monitor if the devices send at least a certain number of messages in a time interval')]/strong[contains(., 'Lower/higher_threshold')]", desc = "Message Tooltip Pop-up Text Lower/Higher Threshold")
    private static PageElement messageTooltipTextThreshold;
    @Element(xpath = "//dmc-alarms-message/ul/li[contains(.,'to monitor widespread disservices in two specific control time windows') and contains(.,'Short/Long Time Window')]/strong[contains(., 'Disservice_alarm')]", desc = "Message Tooltip Pop-up Text Disservice Alarm")
    private static PageElement messageTooltipTextDisservice;
    @Element(xpath = "//dmc-alarms-message/ul/li[contains(.,'to monitor specific value')]/strong[contains(., 'Telemetry_monitoring')]", desc = "Message Tooltip Pop-up Text Telemetry Monitoring")
    private static PageElement messageTooltipTextTelemetry;
    @Element(xpath = "//dmc-alarms-message/ul/li[contains(.,'the device sent no messages for a time windows')]/strong[contains(., 'Zero_messages')]", desc = "Message Tooltip Pop-up Text Zero Messages")
    private static PageElement messageTooltipTextZero;
    @Element(xpath = "//dmc-alarms-message/ul/li[contains(.,'notification that group alarms of the same type in the chosen time windows are send a single notification with all the information')]/strong[contains(., 'Aggregated_notification')]", desc = "Message Tooltip Pop-up Text Aggregated Notification")
    private static PageElement messageTooltipTextAggregated;
    @Element(xpath = "//th/..//div[contains(@class, 'ng-star-inserted')]/div[contains(., 'Status')]/i", desc = "Status Tooltip Icon")
    private static PageElement statusTooltipIcon;
    @Element(xpath = "//dmc-alarms-status/h4[contains(., 'Status')]", desc = "Status Tooltip Pop-up Title")
    private static PageElement statusTooltipTitle;
    @Element(xpath = "//dmc-alarms-status/div/p[contains(., 'It is the') and contains(., 'status') and contains(., 'property reported in the alarm detail; for each type of alarm is possible to have different statuses, reported in the following table')]", desc = "Status Tooltip Pop-up Text")
    private static PageElement statusTooltipText;
    @Element(xpath = "//dmc-alarms-status/div/ul/li[contains(.,'the device is returned online')]/strong[contains(., 'Online')]", desc = "Status Tooltip Pop-up Text Online")
    private static PageElement statusTooltipTextOnline;
    @Element(xpath = "//dmc-alarms-status/div/ul/li[contains(.,'the device has gone offline')]/strong[contains(., 'Offline')]", desc = "Status Tooltip Pop-up Text Offline")
    private static PageElement statusTooltipTextOffline;
    @Element(xpath = "//dmc-alarms-status/div/ul/li[contains(.,'the device raised an alarm') and contains(.,'defined in E2E monitoring')]/strong[contains(., 'In alarm')]", desc = "Status Tooltip Pop-up Text In alarm")
    private static PageElement statusTooltipTextInAlarm;
    @Element(xpath = "//dmc-alarms-status/div/ul/li[contains(.,'a subscription to a lower/higher treshold alarm has been invalidated')]/strong[contains(., 'Alarm invalidated')]", desc = "Status Tooltip Pop-up Text Alarm invalidated")
    private static PageElement statusTooltipTextAlarmInvalidated;
    @Element(xpath = "//dmc-alarms-status/div/ul/li[contains(.,'an alarm previously raised has been deactivated')]/strong[contains(., 'Alarm Cleared')]", desc = "Status Tooltip Pop-up Text Alarm cleared")
    private static PageElement statusTooltipTextAlarmCleared;
    @Element(xpath = "//dmc-alarms-status/div/ul/li[contains(.,'error events for aggregated alarms and platform logs')]/strong[contains(., 'Error')]", desc = "Status Tooltip Pop-up Text Error")
    private static PageElement statusTooltipTextError;
    @Element(xpath = "//footer/button[contains(.,'Close')]", desc = "Close Tooltip Pop-up Button")
    private static PageElement closeTooltipButton;
    /*----------------------------------------- Filter Box --------------------------------------------*/
    @Element(xpath = "//div[@class='dmc-card-header']/h2[.='Filters']/parent::div", desc = "Filters box")
    private static PageElement filtersBox;
    @Element(xpath = "//div[@class='dmc-card-header']/h2[.='Filters']/following-sibling::i", desc = "dropdown icon of the filters box")
    private static PageElement dropdownIconFilterBox;
    @Element(xpath = "//dmc-form-field-label[contains(., 'Type')]//following-sibling::dmc-multi-select//div[@class='dmc-facade-label' and contains(., '')]", desc = "Status Filter box")
    private static PageElement typeFilterBox;
    @Element(xpath = "(//dmc-form-field-label[contains(., 'Type')]//following-sibling::dmc-multi-select//div[@class='dmc-facade-label' and contains(., 'Select options...')]/../following-sibling::dmc-multi-select-dropdown//div[@class='dmc-option-label'])[1]", desc = "first option of status dropdown filter")
    private static PageElement firstOptionOfTypeFilter;
    @Element(xpath = "//dmc-form-field-label[contains(., 'Type')]//following-sibling::dmc-multi-select//div[@class='dmc-facade-label' and contains(., '')]//following-sibling::div/i[@dmcicon='chevron-down']", desc = "dropdown icon Status Filter box")
    private static PageElement dropdownTypeFilterBox;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'thing_event')]", desc = "Dropdown Menu Type: Thing Event")
    private static PageElement thingEventDropdownOption;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'device_alarm')]", desc = "Dropdown Menu Type: Device Alarm")
    private static PageElement deviceAlarmDropdownOption;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'aggregated_alarm')]", desc = "Dropdown Menu Type: Aggregated Alarm")
    private static PageElement aggregatedAlarmDropdownOption;
    @Element(xpath = "//dmc-form-field-label[contains(., 'Message')]//following-sibling::dmc-multi-select//div[@class='dmc-facade-label' and contains(., '')]", desc = "Status Filter box")
    private static PageElement messageFilterBox;
    @Element(xpath = "(//dmc-form-field-label[contains(., 'Message')]//following-sibling::dmc-multi-select//div[@class='dmc-facade-label' and contains(., 'Select options...')]/../following-sibling::dmc-multi-select-dropdown//div[@class='dmc-option-label'])[1]", desc = "first option of status dropdown filter")
    private static PageElement firstOptionOfMessageFilter;
    @Element(xpath = "//dmc-form-field-label[contains(., 'Message')]//following-sibling::dmc-multi-select//div[@class='dmc-facade-label' and contains(., '')]//following-sibling::div/i[@dmcicon='chevron-down']", desc = "dropdown icon Status Filter box")
    private static PageElement dropdownMessageFilterBox;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'lifecycle')]", desc = "Dropdown Menu Message: Lifecycle")
    private static PageElement lifecycleDropdownOption;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'lower_threshold')]", desc = "Dropdown Menu Message: Lower Threshold")
    private static PageElement lowerThresholdDropdownOption;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'higher_threshold')]", desc = "Dropdown Menu Message: Higher Threshold")
    private static PageElement higherThresholdDropdownOption;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'business_alarm')]", desc = "Dropdown Menu Message: Business Alarm")
    private static PageElement businessAlarmDropdownOption;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'disservice_alarm')]", desc = "Dropdown Menu Message: Disservice Alarm")
    private static PageElement disserviceAlarmDropdownOption;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'telemetry_monitoring')]", desc = "Dropdown Menu Message: Telemetry Monitoring")
    private static PageElement telemetryMonitoringDropdownOption;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'aggregated_notification')]", desc = "Dropdown Menu Message: Aggregated Notification")
    private static PageElement aggregatedNotificationDropdownOption;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'zero_messages')]", desc = "Dropdown Menu Message: Zero Messages")
    private static PageElement zeroMessagesDropdownOption;
    @Element(xpath = "//dmc-form-field-label[contains(., 'Status')]//following-sibling::dmc-multi-select//div[@class='dmc-facade-label' and contains(., '')]", desc = "Status Filter box")
    private static PageElement statusFilterBox;
    @Element(xpath = "(//dmc-form-field-label[contains(., 'Status')]//following-sibling::dmc-multi-select//div[@class='dmc-facade-label' and contains(., 'Select options...')]/../following-sibling::dmc-multi-select-dropdown//div[@class='dmc-option-label'])[1]", desc = "first option of status dropdown filter")
    private static PageElement firstOptionOfStatusFilter;
    @Element(xpath = "//dmc-form-field-label[contains(., 'Status')]//following-sibling::dmc-multi-select//div[@class='dmc-facade-label' and contains(., '')]//following-sibling::div/i[@dmcicon='chevron-down']", desc = "dropdown icon Status Filter box")
    private static PageElement dropdownStatusFilterBox;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'online')]", desc = "Dropdown Menu Status: Online")
    private static PageElement onlineDropdownOption;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'offline')]", desc = "Dropdown Menu Status: Offline")
    private static PageElement offlineDropdownOption;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'in-alarm')]", desc = "Dropdown Menu Status: In alarm")
    private static PageElement inAlarmDropdownOption;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'error')]", desc = "Dropdown Menu Status: Error")
    private static PageElement errorDropdownOption;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'alarm-cleared')]", desc = "Dropdown Menu Status: Alarm cleared")
    private static PageElement alarmClearedDropdownOption;
    @Element(xpath = "//div[@class='dmc-option-label' and contains(.,'alarm-invalidated')]", desc = "Dropdown Menu Status: Alarm invalidated")
    private static PageElement alarmInvalidatedDropdownOption;
    @Element(xpath = "//dmc-form-field-label[contains(.,'Date Range')]//following-sibling::dmc-datetime-range-picker//div[@class='-input' and contains(.,'Select datetimes')]", desc = "Datetimes filter box")
    private static PageElement dateTimeFilterBox;
    @Element(xpath = "//div[@class='-controls-right']//button[contains(text(), 'Confirm')]", desc = "Confirm button into Calendar")
    private static PageElement confirmButtoCalendar;
    @Element(xpath = "//div[@class='col-12 mt-3 dmc-form-footer d-flex justify-content-end']//button[contains(text(), 'Confirm')]", desc = "Confirm button into Filter section")
    private static PageElement confirmButtonFilterSection;

    @Element(xpath = "//div[@class='-dropdown']" , desc = "Calendar")
    private static PageElement calendar;
    @Element(xpath = "//div[@class='-tabs']/div[contains(@class, '-tab') and contains(.,'To')]", desc = "previous day from today in FROM tab active")
    private static PageElement toTabsIntoCalendar;
    @Element(xpath = "(//dmc-calendar//div[@class='-days']/div[contains(@class, '--today')]//preceding-sibling::div[1])[1]", desc = "previous day from today in FROM tab active")
    private static PageElement previuosDayInTheFROMCalendar;
    @Element(xpath = "(//dmc-calendar//div[@class='-days']/div[contains(@class, '--today')]//preceding-sibling::div[1])[2]", desc = "previous day from today in FROM tab active")
    private static PageElement previuosDayInTheTOCalendar;
    @Element(xpath = "//div[@class='-controls']//button[contains(text(), 'Now')]" , desc= "button Now into calendar")
    public static PageElement buttonNowIntoCalendar;
    @Element(xpath = "//div[@class='-controls']//button[contains(text(), 'Confirm')]" , desc= "button Confirm into calendar")
    public static PageElement buttonConfirmIntoCalendar;
    @Element(xpath = "(//mat-option/span[@class='mat-option-text' and contains(text(),'5')])[1]" , desc= "button Confirm into calendar")
    public static PageElement firstOptionPaginationTable;

    public static PageElement getPaginationTableButton() {
        return paginationTableButton;
    }

    @Element(xpath = "//span[contains(text(), 'ENELINT')]", desc = "info user logged in")
    private static PageElement infoUserLoggedIn;
    @Element(xpath = "//span[contains(text(), 'Language') or contains(text(), 'Lingua')]", desc = "Language sub option into info user button")
    private static PageElement languageSubOption;
    @Element(xpath = "//button[contains(text(), 'English')]", desc = "Button English sub option")
    private static PageElement buttonEnglishSubOption;

    @Element(xpath = "//h6[contains(@class, 'text-center') and contains(., 'Number of alarms to be exported')]", desc = "Text present on Alarms Export popup")
    public static PageElement textOnPopUpAlarmExport;

    @Element(xpath = "//*[@id='mat-select-value-1']/span/span" , desc= "button Confirm into calendar")
    public static PageElement paginationTableButton;

    @Element(xpath = "//div[@class='-rows-counters']", desc = "number of rows")
    public static PageElement numberOfRows;

    @Element(xpath = "//div[@class='-navigation']/i[@dmcicon='chevron-right']" , desc= "button Confirm into calendar")
    public static PageElement buttonNextPageTable;

    public static PageElement getSearchInputBox() {
        return searchInputBox;
    }

    @Element(xpath = "//input[@placeholder='Search by source']", desc = "Search input box")
    private static PageElement searchInputBox;

    @Element(xpath = "//i[@dmcicon='download']/ancestor::button", desc = "export icon")
    private static PageElement exportIcon;

    @Element(xpath = "//tr/td[contains(., '')][4]" , desc= "button Confirm into calendar")
    public static PageElement allSourcesInTheTableFirstPage;

    @Element(xpath = "(//td[contains(., 'Test_Concept-01_thing1')])[1]", desc= "button Confirm into calendar")
    public static PageElement lastAlarmWithTestConcept01thing1;

    @Element(xpath = "(//td[contains(., 'Test_Concept-01_thing1')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastAlarmWithTestConcept01thing1IconDetail;

    @Element(xpath = "(//td[contains(., 'Test_Concept-02_thing1')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastAlarmWithTestConcept02thing2IconDetail;

    @Element(xpath = "(//td[contains(., 'Test_Concept-04_thing2')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastAlarmWithTestConcept04thing2IconDetail;

    @Element(xpath = "(//td[contains(., 'Test_Concept-04')]//following-sibling::td[contains(., 'in-alarm')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastAlarmWithTestConcept04IconDetail;

    @Element(xpath = "(//td[contains(., 'Test_Concept-02')]//following-sibling::td[contains(., 'in-alarm')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastAlarmWithTestConcept02IconDetail;

    @Element(xpath = "(//td[contains(., 'Test_Concept-01')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastAlarmWithTestConcept01IconDetail;

    @Element(xpath = "(//td[contains(., 'Test_Concept-01')]//following-sibling::td[contains(., 'in-alarm')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastAlarmWithTestConcept01InAlarmIconDetail;

    @Element(xpath = "//i[@dmcicon='refresh']", desc = "refresh button")
    private static PageElement refreshBTN;

    @Element(xpath = "//input[@type='search']", desc = "search box")
    private static PageElement searchBox;

    @Element(xpath = "(//td[contains(., 'Test_Concept-04')]//following-sibling::td[contains(., 'aggregated')])[1]", desc= "button Confirm into calendar")
    public static PageElement lastAlarmWithTestConcept04Aggregated;




    public static PageElement getAlarmsLandingPageTitle() {return alarmsLandingPageTitle;}

    //public static String rowsWithSpecificFilters = "//tbody/tr/td[contains(.,'%s')]/following-sibling::td[contains(.,'%s')]/parent::tr";

    public static String rowsWithSpecificFilters = "//tr/td[contains(.,'%s')]/following-sibling::td[contains(.,'%s')]/following-sibling::td[contains(.,'%s')]";

    public static String rowFilteredBySource = "//tbody/tr/td[contains(., '%s')]/parent::tr";

    public static String getRandomSource(){
        List<WebElement> listSources = CommonPage.getDriver().findElements(allSourcesInTheTableFirstPage.getBy());
        List<String> sources = new ArrayList<>();
        if(listSources!= null && !listSources.isEmpty()){
            for(WebElement we: listSources){
                if(!sources.contains(we.getText())){
                    sources.add(we.getText());
                }
            }

            Random r = new Random();
            int n = r.nextInt(sources.size());
            return sources.get(n);
        }
        return "";
    }

    @Element(xpath = "//tr[1]/td[contains(@class,'--align-left')]", desc = "all cell of first row in the table")
    private static PageElement allCellOfFirstRow;

    @Element(xpath = "(//div[@class='-picker-date']//div[@class='-prev']/i[@dmcicon='chevron-left'])[1]", desc = "Left btn on month selection date in Connectivity History ")
    private static PageElement leftMonthBTNFrom;
    @Element(xpath = "(//div[@class='-picker-date']//div[@class='-prev']/i[@dmcicon='chevron-left'])[2]", desc = "Left btn on month selection date in Connectivity History ")
    private static PageElement leftMonthBTNTo;
    @Element(xpath = "(//div[@class='-days']//div[contains(text(), ' 15 ')])[1]", desc = "fifteenth day on previous month selection date  ")
    private static PageElement fifteenthDayPreviousMonthFrom;
    @Element(xpath = "(//div[@class='-days']//div[contains(text(), ' 15 ')])[2]", desc = "fifteenth day on previous month selection date  ")
    private static PageElement fifteenthDayPreviousMonthTo;
    @Element(xpath = "//div[@class='-controls']//button[contains(text(), 'Now')]", desc = "Now button into Calendar")
    private static PageElement nowButtonCalendar;
    @Element(xpath = "//div[@class='-controls']//button[contains(text(), 'Confirm')]", desc = "Confirm button into Calendar")
    private static PageElement confirmButtonCalendar;
    @Element(xpath = "//i[contains(@class, 'dmc-icon__arrow-small-up')]", desc = "oldest arrow dateTime")
    private static PageElement oldestDateTimeArrowUp;
    @Element(xpath = "//i[contains(@class, 'dmc-icon__arrow-small-down')]", desc = "most recent arrow dateTime")
    private static PageElement mostRecentArrowDown;

    @Element(xpath = "//button[@class='-dismiss']", desc = "Remove confirmation Delete button")
    private static PageElement toastMessageClose;

   public static PageElement getOldestDateTimeArrowUp() {return oldestDateTimeArrowUp;}
    public static PageElement getMostRecentArrowDown() {return mostRecentArrowDown;}
    public static PageElement getAllCellOfFirstRow() {return allCellOfFirstRow;}

    @Element(xpath = "(//td[contains(., 'Test_Concept-04')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastGenericAlarmWithTestConcept04IconDetail;

    @Element(xpath = "(//td[contains(., 'Test_Concept-03')]//following-sibling::td[contains(., 'in-alarm')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastAlarmWithTestConcept03IconDetail;

    @Element(xpath = "(//mat-option/span[contains(.,5)])[1]", desc = "5 rows per page ")
    private static PageElement fiveRowsPerPage ;

    @Element(xpath = "(//mat-option/span[contains(.,10)])[1]", desc = "10 rows per page ")
    private static PageElement tenRowsPerPage ;

    @Element(xpath = "//mat-option/span[contains(.,20)]", desc = "20 rows per page")
    private static PageElement twentyRowsPerPage ;

    @Element(xpath = "//mat-option/span[contains(.,50)]", desc = "50 rows per page")
    private static PageElement fiftyRowsPerPage ;

    @Element(xpath = "//mat-option/span[contains(.,100)]", desc = "100 rows per page ")
    private static PageElement hundredRowsPerPage ;

    @Element(xpath = "//dmc-table-page-selector", desc = "page number indicator in Italian")
    private static PageElement pageCountersIT ;
    public static PageElement getPageCountersIT(){return pageCountersIT;}

    @Element(xpath = "//li/button[contains(.,' Reimposta larghezza colonne ')]", desc = "resize columns in column actions in Italian")
    private static PageElement resizeColumnsIT ;
    public static PageElement getResizeColumnsIT(){return resizeColumnsIT;}

    @Element(xpath = "//span[contains(.,' Chiudi ')]", desc = "close column actions in Italian")
    private static PageElement closeColumnsBTN ;
    public static PageElement getCloseColumnsBTN(){return closeColumnsBTN;}

    @Element(xpath = "(//td[contains(., 'Test_Concept-04_thing2')]//following-sibling::td[contains(.,'in-alarm')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastStatusInAlarmWithTestConcept04IconDetail;
    @Element(xpath = "(//td[contains(., 'Test_Concept-04_thing2')]//following-sibling::td[contains(.,'lower_threshold')]//following-sibling::td[contains(.,'in-alarm')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastStatusInAlarmWithTestConcept04IconDetailLowerTh;

    @Element(xpath = "(//td[contains(., 'Test_Concept-04_thing2')]//following-sibling::td[contains(.,'alarm-cleared')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastAlarmClearedWithTestConcept04IconDetail;

    @Element(xpath = "(//td[contains(., 'Test_Concept-01')]//following-sibling::td[contains(.,'in-alarm')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastStatusInAlarmWithTestConcept01IconDetail;

    @Element(xpath = "(//td[contains(., 'Test_Concept-01')]//following-sibling::td[contains(.,'alarm-cleared')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastAlarmClearedWithTestConcept01IconDetail;

    @Element(xpath = "(//td[contains(., 'Test_Concept-02_thing1')]//following-sibling::td[contains(.,'in-alarm')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastStatusInAlarmWithTestConcept02IconDetail;

    @Element(xpath = "(//td[contains(., 'Test_Concept-02_thing2')]//following-sibling::td[contains(.,'alarm-cleared')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastAlarmClearedWithTestConcept02IconDetail;

    @Element(xpath = "(//td[contains(., 'Test_Concept-03_thing1')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastAlarmWithTestConcept03thing1IconDetail;
    @Element(xpath = "(//td[contains(., 'Test_Concept-03')]//following-sibling::td[contains(.,'in-alarm')]//following-sibling::td//*[@icon='document'])[1]", desc= "icon details of alarm")
    public static PageElement lastStatusInAlarmWithTestConcept03IconDetail;
}